{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/button/more-button.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","shiba","CardList","content","i","count","push","shibas","map","Shortid","generate","MoreButton","buttonText","clickEvent","handleClick","max","undefined","onClick","type","App","setState","prevState","prevProps","state","targetUrl","fetch","then","res","json","data","catch","console","log","this","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sTAGaA,G,MAAO,SAACC,GACjB,OACC,qBAAKC,UAAU,iBAAf,SACG,qBAAKC,IAAI,QAAQC,IAAKH,EAAMI,YCAvBC,G,MAAW,SAAAL,GAEpB,IADA,IAAIM,EAAU,GACNC,EAAI,EAAGA,EAAIP,EAAMQ,MAAOD,IAC5BD,EAAQG,KAAKT,EAAMU,OAAOH,IAE9B,OACA,qBAAKN,UAAU,YAAf,SACKK,EAAQK,KAAI,SAACP,GAAD,OACT,cAAC,EAAD,CAA+BA,MAAOA,GAA3BQ,IAAQC,mBCXlBC,G,MAAa,SAACd,GACvB,IAAIe,EAAa,iCACbC,EAAahB,EAAMiB,YAKvB,OAJGjB,EAAMQ,OAASR,EAAMkB,MACpBH,EAAa,2BACbC,OAAaG,GAGb,wBAAQlB,UAAU,qBAAqBmB,QAASJ,EAAYK,KAAK,SAAjE,SAA2EN,MCuCpEO,E,kDAzCb,WAAYtB,GAAQ,IAAD,8BACjB,cAAMA,IAmBRiB,YAAc,WACZ,EAAKM,UAAS,SAACC,EAAWC,GACxB,MAAO,CAAEjB,MAAOgB,EAAUhB,MA1Bb,OAOf,EAAKkB,MAAQ,CACXhB,OAAQ,GACRF,MATa,EAUbU,IATS,IAGM,E,gEASC,IAAD,OAEbS,EAAS,+CAdF,IAeXC,MAFe,uCAEED,GAChBE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAI,EAAKT,SAAS,CAACb,OAAQsB,OACpCC,OAAM,SAAAH,GACLI,QAAQC,IAAI,mC,+BAWd,OACE,sBAAKlC,UAAU,MAAf,UACE,2CACA,cAAC,EAAD,CAAUS,OAAQ0B,KAAKV,MAAMhB,OAAQF,MAAO4B,KAAKV,MAAMlB,QACvD,cAAC,EAAD,CACES,YAAemB,KAAKnB,YACpBT,MAAS4B,KAAKV,MAAMlB,MACpBU,IAAOkB,KAAKV,MAAMR,a,GAnCVmB,IAAMC,WCITC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5c612796.chunk.js","sourcesContent":["import React from 'react'\nimport './card.styles.css'\n\nexport const Card = (props) => {\n    return (\n     <div className='card-container'>\n        <img alt='shiba' src={props.shiba} />\n    </div>\n    )\n}\n","import React from 'react';\nimport Shortid from 'shortid';\n\nimport { Card } from '../card/card.component'\nimport './card-list.styles.css';\n\nexport const CardList = props => {\n    let content = [];\n    for(let i = 0; i < props.count; i++) {\n        content.push(props.shibas[i])\n    }\n    return(\n    <div className='card-list'>\n        {content.map((shiba) => (\n            <Card key={Shortid.generate()} shiba={shiba} />\n            ))} \n    </div>\n    )\n}\n\n\n","import React from 'react'\nimport './more-button.styles.css'\n\nexport const MoreButton = (props) => {\n    let buttonText = 'click here to see more shibas!'\n    let clickEvent = props.handleClick;\n    if(props.count >= props.max) { //if we reach the limit of displayed images, change the text of the button and stop the click event\n        buttonText = 'sorry, no more shibas...'\n        clickEvent = undefined;\n    }\n    return(\n        <button className='more-button bouncy' onClick={clickEvent} type='button'>{buttonText}</button>\n    )\n}\n","import './App.css';\nimport React from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport { MoreButton } from './components/button/more-button.component';\n\nconst displayNum = 3; //sets the number of images to display initially, also sets the number to add everytime the more button is clicked.\nconst maxNum = 99; //the maximum number of images that can be sent in one api request\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      shibas: [],\n      count: displayNum, //gets initial count from displayNum\n      max: maxNum\n    }\n  }\n  componentDidMount(){ //Uses the shiba online api to set the shibas state to an array of images\n    let proxyUrl = 'https://cors-anywhere.herokuapp.com/'\n    let targetUrl = `http://shibe.online/api/shibes?count=${maxNum}` //uses maxNum. The actual api limit is 100\n    fetch(proxyUrl + targetUrl)\n    .then(res => res.json())\n    .then(data => this.setState({shibas: data}))\n    .catch(res => {\n      console.log('could not complete request')\n    }) \n  }\n\n  handleClick = () => {\n    this.setState((prevState, prevProps) => {\n      return { count: prevState.count + displayNum }\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Shibas!!!</h1>\n        <CardList shibas={this.state.shibas} count={this.state.count} />\n        <MoreButton \n          handleClick = {this.handleClick}\n          count = {this.state.count}\n          max = {this.state.max}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}